<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Napalm on Technology Blog Wim</title>
    <link>/tags/napalm/</link>
    <description>Recent content in Napalm on Technology Blog Wim</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Apr 2020 12:32:50 +0100</lastBuildDate>
    
	<atom:link href="/tags/napalm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NAPALM Introduction - Part 2</title>
      <link>/networkprogrammability/2020-04-07_napalm_introduction_part2/</link>
      <pubDate>Tue, 07 Apr 2020 12:32:50 +0100</pubDate>
      
      <guid>/networkprogrammability/2020-04-07_napalm_introduction_part2/</guid>
      <description>Introduction Let&amp;rsquo;s continue where we left off in part 1. In this post, we will focus more on some specific use cases, like configuration validation and changing configurations onto our devices.</description>
    </item>
    
    <item>
      <title>NAPALM Introduction - Part 1</title>
      <link>/networkprogrammability/2020-04-06_napalm_introduction_part1/</link>
      <pubDate>Mon, 06 Apr 2020 12:32:50 +0100</pubDate>
      
      <guid>/networkprogrammability/2020-04-06_napalm_introduction_part1/</guid>
      <description>Introduction Napalm stands for &amp;lsquo;Network Automation and Programmability Abstraction Layer with Multivendor support (NAPALM)&amp;rsquo; and is a Python library that can be used to automate and interavt with networking devices and OSs using a unified API.</description>
    </item>
    
  </channel>
</rss>